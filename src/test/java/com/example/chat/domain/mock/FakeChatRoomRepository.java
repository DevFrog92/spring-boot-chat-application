package com.example.chat.domain.mock;

import com.example.chat.domain.chatroom.domain.ChatRoom;
import com.example.chat.domain.chatroom.service.port.ChatRoomRepository;
import com.example.chat.domain.member.domain.Member;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class FakeChatRoomRepository implements ChatRoomRepository {
    private Long autoGeneratedId = 0L;
    private final List<ChatRoom> store = new ArrayList<>();

    @Override
    public Optional<ChatRoom> getById(long id) {
        return store.stream().filter(chatRoom -> Objects.equals(chatRoom.getId(), id)).findAny();
    }

    @Override
    public List<ChatRoom> findAllRooms(Member member) {
        return new ArrayList<>(store);
    }

    @Override
    public ChatRoom save(ChatRoom chatRoom) {
        ChatRoom newChatRoom = ChatRoom.builder()
                .id(++autoGeneratedId)
                .name(chatRoom.getName())
                .type(chatRoom.getType())
                .maxChatRoomSize(chatRoom.getMaxChatRoomSize())
                .participationNum(chatRoom.getParticipationNum())
                .secretCode(chatRoom.getSecretCode())
                .member(chatRoom.getMember())
                .build();

        store.add(newChatRoom);
        return newChatRoom;
    }

    @Override
    public void deletById(long id) {
        ChatRoom findChatRoom = store.stream()
                .filter(chatRoom -> Objects.equals(chatRoom.getId(), id))
                .findAny().orElseThrow();

        ChatRoom newChatRoom = ChatRoom.builder()
                .id(findChatRoom.getId())
                .name(findChatRoom.getName())
                .type(findChatRoom.getType())
                .maxChatRoomSize(findChatRoom.getMaxChatRoomSize())
                .participationNum(findChatRoom.getParticipationNum())
                .secretCode(findChatRoom.getSecretCode())
                .disabledAt(LocalDateTime.MIN)
                .build();

        store.remove(findChatRoom);
        store.add(newChatRoom);
    }
}
